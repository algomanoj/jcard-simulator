drop table if exists consumer cascade;
drop table if exists consumer_props cascade;
drop table if exists consumer_roles cascade;
drop table if exists eeuser cascade;
drop table if exists eeuser_passwordhistory cascade;
drop table if exists eeuser_props cascade;
drop table if exists eeuser_roles cascade;
drop table if exists realm cascade;
drop table if exists revision cascade;
drop table if exists role cascade;
drop table if exists role_perms cascade;
drop table if exists sysconfig cascade;
drop table if exists syslog cascade;
drop sequence if exists hibernate_sequence;
create sequence hibernate_sequence start 1 increment 1;
create table consumer (id varchar(255) not null, hash varchar(8000), active char(1), deleted char(1), startDate date, endDate date, eeuser int8, primary key (id));
create table consumer_props (id varchar(255) not null, propName varchar(64) not null, propValue varchar(255), primary key (id, propName));
create table consumer_roles (consumer varchar(255) not null, role int8 not null, primary key (consumer, role));
create table eeuser (id int8 not null, nick varchar(64) not null, passwordHash varchar(8000), name varchar(128), email varchar(128), active char(1), deleted char(1), verified char(1), startDate date, endDate date, forcePasswordChange char(1), lastLogin timestamp, passwordChanged timestamp, loginAttempts int4, primary key (id));
create table eeuser_passwordhistory (eeuser int8 not null, id int4 not null, value varchar(8000) not null, primary key (eeuser, id));
create table eeuser_props (id int8 not null, propName varchar(64) not null, propValue varchar(255), primary key (id, propName));
create table eeuser_roles (eeuser int8 not null, role int8 not null, primary key (eeuser, role));
create table realm (id  bigserial not null, description varchar(8000), name varchar(64), primary key (id));
create table revision (id int8 not null, date timestamp, info varchar(8000), ref varchar(64), author int8, primary key (id));
create table role (id int8 not null, name varchar(64) not null, realm int8, parent int8, primary key (id));
create table role_perms (role int8 not null, name varchar(64) not null, primary key (role, name));
create table sysconfig (id varchar(64) not null, readPerm varchar(64), value varchar(8000), writePerm varchar(64), primary key (id));
create table syslog (id int8 not null, date timestamp, deleted char(1), source varchar(64), type varchar(32), severity int4, summary varchar(255), detail varchar(4000), trace varchar(4000), primary key (id));
create index eeuser_nick on eeuser (nick);
alter table eeuser add constraint UK_gi0mq7qm8wxwmxhkcwksbnue unique (nick);
alter table realm add constraint UK_realm_name unique (name);
create index ref on revision (ref);
alter table role add constraint UK_RoleRealmName unique (name, realm);
alter table consumer add constraint FKConsumerUser foreign key (eeuser) references eeuser;
alter table consumer_props add constraint FKConsumerProps foreign key (id) references consumer;
alter table consumer_roles add constraint FKConsumerRolesRole foreign key (role) references role;
alter table consumer_roles add constraint FKConsumerRolesConsumer foreign key (consumer) references consumer;
alter table eeuser_passwordhistory add constraint FKdpp5d41gbwwq9xg16m2oe2i03 foreign key (eeuser) references eeuser;
alter table eeuser_props add constraint FKUserProps foreign key (id) references eeuser;
alter table eeuser_roles add constraint FKUserRolesRole foreign key (role) references role;
alter table eeuser_roles add constraint FKUserRolesUser foreign key (eeuser) references eeuser;
alter table revision add constraint FKgn31vrcdhydl4x38cmdfxiyrn foreign key (author) references eeuser;
alter table role add constraint FK_RoleRealm foreign key (realm) references realm;
alter table role add constraint FK_RoleParent foreign key (parent) references role;
alter table role_perms add constraint FK_RolePermissions foreign key (role) references role;
